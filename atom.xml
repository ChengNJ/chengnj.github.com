<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>杂言闲语</title>
  
  <subtitle>za yan xian yu</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chengnj.github.io/"/>
  <updated>2020-02-21T07:20:37.663Z</updated>
  <id>https://chengnj.github.io/</id>
  
  <author>
    <name>wjy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Base64编码包含换行符问题</title>
    <link href="https://chengnj.github.io/%E7%AC%94%E8%AE%B0/2020/base64q1/"/>
    <id>https://chengnj.github.io/%E7%AC%94%E8%AE%B0/2020/base64q1/</id>
    <published>2020-02-21T03:27:23.000Z</published>
    <updated>2020-02-21T07:20:37.663Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在进行fdfs存储的时候，将前端传过来的Base64进行解码时出现报错&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
        
      
    
    </summary>
    
    
      <category term="笔记" scheme="https://chengnj.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="base64" scheme="https://chengnj.github.io/tags/base64/"/>
    
      <category term="换行符" scheme="https://chengnj.github.io/tags/%E6%8D%A2%E8%A1%8C%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>docker系列五docker-compose编排服务</title>
    <link href="https://chengnj.github.io/docker/2020/docker5/"/>
    <id>https://chengnj.github.io/docker/2020/docker5/</id>
    <published>2020-02-17T09:11:09.000Z</published>
    <updated>2020-02-18T03:40:08.580Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;什么是docker-compose&quot;&gt;&lt;a href=&quot;#什么是docker-compose&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="docker" scheme="https://chengnj.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://chengnj.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>dial tcp lookup registry.cn-hangzhou.aliyuncs.com on 8.8.8.8:53 read udp 192.168.0.188:54861-&gt;8.8.8.8:53 i/o timeout</title>
    <link href="https://chengnj.github.io/docker/2020/dockerpull/"/>
    <id>https://chengnj.github.io/docker/2020/dockerpull/</id>
    <published>2020-02-08T09:10:39.000Z</published>
    <updated>2020-02-08T10:26:14.752Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在使用docker-compose pull进行拉取镜像的时候，出现timeout异常，报错如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
        
      
    
    </summary>
    
    
      <category term="docker" scheme="https://chengnj.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://chengnj.github.io/tags/docker/"/>
    
      <category term="docker问题" scheme="https://chengnj.github.io/tags/docker%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>docker系列四使用Dockerfile创建镜像</title>
    <link href="https://chengnj.github.io/docker/2020/docker4/"/>
    <id>https://chengnj.github.io/docker/2020/docker4/</id>
    <published>2020-01-28T10:12:34.000Z</published>
    <updated>2020-02-17T09:12:13.550Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;前面都是通过镜像仓库进行拉取别人构建好的镜像进行操作，所以这次我们进行编写dockerfile进行自定义构建镜像。&lt;/p&gt;
&lt;h1 id=&quot;什么是Dockerfile&quot;&gt;&lt;a href=&quot;#什么是Dockerfile&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="docker" scheme="https://chengnj.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://chengnj.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker系列三docker命令</title>
    <link href="https://chengnj.github.io/docker/2020/docker3/"/>
    <id>https://chengnj.github.io/docker/2020/docker3/</id>
    <published>2020-01-10T09:48:37.000Z</published>
    <updated>2020-02-17T09:12:08.040Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;经过前两篇的前期准备，这篇开始就可以真正地进入docker的实地操作啦！那么先来了解下docker的命令操作。以下所有涉及到容器的，既可以使用容器名称，也可以使用容器id(只需要输入id前3位即可，不行就四位。。。)&lt;/p&gt;
&lt;h1 id=&quot;镜像仓库&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="docker" scheme="https://chengnj.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://chengnj.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker系列二docker配置优化</title>
    <link href="https://chengnj.github.io/docker/2020/docker2/"/>
    <id>https://chengnj.github.io/docker/2020/docker2/</id>
    <published>2020-01-10T08:29:12.000Z</published>
    <updated>2020-02-17T09:12:04.841Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;工欲善其事必先利其器，所以在安装完docker后，我们需要对docker修改配置。&lt;br&gt;docker的配置文件&lt;strong&gt;是/etc/docker/daemon.json&lt;/strong&gt;如果没有这个文件，就新建一个。&lt;br&gt;&lt;strong&gt;该配置文件修改完后，需要重
        
      
    
    </summary>
    
    
      <category term="docker" scheme="https://chengnj.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://chengnj.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker系列一docker安装</title>
    <link href="https://chengnj.github.io/docker/2020/docker1/"/>
    <id>https://chengnj.github.io/docker/2020/docker1/</id>
    <published>2020-01-10T04:19:39.000Z</published>
    <updated>2020-02-11T01:43:13.326Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近打开印象笔记，发现自己在18年就有做docker的一些相关记录。后面就没了。。没了。。了。。。&lt;br&gt;现在在这家公司，最开始是由于正式使用是内网环境，用docker有点麻烦，就因此把服务docker化部署这个任务闲置了，最近开始公司开始采用联通云，使用云上部署，加上最近
        
      
    
    </summary>
    
    
      <category term="docker" scheme="https://chengnj.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://chengnj.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>nvidia-docker支持docker使用gpu</title>
    <link href="https://chengnj.github.io/docker/2020/docker-gpu/"/>
    <id>https://chengnj.github.io/docker/2020/docker-gpu/</id>
    <published>2020-01-08T02:21:59.000Z</published>
    <updated>2020-01-28T09:05:46.526Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;docker支持使用nvidia驱动&quot;&gt;&lt;a href=&quot;#docker支持使用nvidia驱动&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="docker" scheme="https://chengnj.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://chengnj.github.io/tags/docker/"/>
    
      <category term="gpu" scheme="https://chengnj.github.io/tags/gpu/"/>
    
      <category term="nvidia" scheme="https://chengnj.github.io/tags/nvidia/"/>
    
  </entry>
  
</feed>
